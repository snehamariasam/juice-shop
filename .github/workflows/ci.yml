name: "CI/CD Pipeline"

on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
    tags-ignore:
      - '*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'

env:
  NODE_DEFAULT_VERSION: 22
  NODE_OPTIONS: "--max_old_space_size=4096"
  CYCLONEDX_NPM_VERSION: '^2.0.0||^3.0.0'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: Cache Node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install full dependencies
        run: npm ci

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Lint source
        run: npm run lint
      - name: Lint configs
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml

  server-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Run server tests
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: |
            NODE_ENV=7ms npm run test:server &&
            NODE_ENV=addo npm run test:server &&
            NODE_ENV=bodgeit npm run test:server &&
            NODE_ENV=ctf npm run test:server &&
            NODE_ENV=fbctf npm run test:server &&
            NODE_ENV=juicebox npm run test:server &&
            NODE_ENV=mozilla npm run test:server &&
            NODE_ENV=oss npm run test:server &&
            NODE_ENV=quiet npm run test:server &&
            NODE_ENV=tutorial npm run test:server &&
            NODE_ENV=unsafe npm run test:server

  api-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Run API tests
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm run frisby

e2e-tests:
  runs-on: ubuntu-latest
  needs: install-dependencies
  steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install dependencies
      run: npm ci

    - name: Run frontend E2E tests (Cypress)
      uses: cypress-io/github-action@v6
      with:
        start: npm start
        wait-on: http://localhost:3000
        wait-on-timeout: 60 # seconds
        browser: chrome
        record: false

  coverage-report:
    runs-on: ubuntu-latest
    needs: [server-tests, api-tests, e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Upload coverage
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            build/reports/coverage/frontend-tests/lcov.info
            build/reports/coverage/server-tests/lcov.info
            build/reports/coverage/api-tests/lcov.info
